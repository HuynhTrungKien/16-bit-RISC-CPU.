// R-type

1110_0000
0000_0010 // EI

1000_0110
0000_0100 // LI r3 <- 4

1000_0010
0000_1010 // LI r1 <- 10

1000_0100
0000_0010 // LI r2 <- 2

1000_1000
0000_1111 // LI r4 <- 15

1000_1010
0000_1111 // LI r5 <- 15

0000_0110
1011_1000 // ADD r7 <- r3 + r2

0000_0110
1011_1001 // SUB r7 <- r3 - r2

0000_0110
1011_1011 // AND r7 <- r3 & r2 16

0000_0110
1011_1100 // OR r7 <- r3 | r2

0000_0110
1011_1101 // XOR r7 <- r3 ^ r2

0000_0110
0111_1110 // SLT cmp = (r3 < r1) ? 1 : 0

0000_0110
1011_1111 // SGT cmp = (r3 > r2) ? 1 : 0

0000_1011
0111_1010 // SLT cmp = (r3 == r2) ? 1 : 0

// I-type

0001_0001
0000_0101 // ADDI r4 <- r0 + 5

0010_1001
0000_0101 // SUBI r4 <- r4 - 5

0101_0001
0000_0101 // ANDI r4 <- r0 & 5

0110_0001
0000_0101 // ORI r4 <- r0 | 5

0100_0001
0000_0101 // XORI r4 <- r0 ^ 5

0011_1001
0000_0101 // LSLI r4 <- r4 << 5

1111_1001
0000_0101 // LSLI r4 <- r4 >> 5

// S-type

1001_0000
1100_0000 // ST r3 -> Mem[0]

1001_0001
0000_0010 // ST r4 -> Mem[2]

// L-type
// LD
0111_0000
1100_0010 // LD r3 <- Mem[2]

0111_0001
0000_0000 // LD r4 <- Mem[0]

// J-type
// CALL
1101_0000
0000_0100 // PC <- PC + 4

1110_0000
0000_0011 // DI

1110_0000
0000_0000 // NOP

1110_0000
0000_0001 // RET